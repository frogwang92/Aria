CMAKE_MINIMUM_REQUIRED(VERSION 3.7)
PROJECT(Aria)
set(PROJECT_NAME_STR Aria)

SET(CMAKE_CXX_STANDARD 14)
ADD_DEFINITIONS(-Wall -Wno-deprecated -pthread)

#common includes
SET(COMMON ${PROJECT_SOURCE_DIR}/Common)
SET(LIBS ${PROJECT_SOURCE_DIR}/Libs)

#python
SET(PYTHON27 /usr/include/python2.7/)
SET(PYTHON27LIB /lib/)
FIND_LIBRARY(LIBPYTHON NAMES python2.7)

#pthread
SET(CMAKE_THREAD_PREFER_PTHREAD true)
FIND_PACKAGE(Threads)
IF (Threads_FOUND)
    INCLUDE_DIRECTORIES(SYSTEM ${Threads_INCLUDE_DIR})
    MESSAGE("Are we using pthreads? ${CMAKE_USE_PTHREADS_INIT}")
ENDIF ()

#boost
FIND_PACKAGE(Boost COMPONENTS python system thread filesystem date_time log log_setup REQUIRED)
IF (Boost_FOUND)
    SET(Boost_USE_STATIC_LIBS OFF)
    SET(Boost_USE_MULTITHREADED ON)
    SET(Boost_USE_STATIC_RUNTIME OFF)
    ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)
    INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR})
    LINK_DIRECTORIES(${Boost_LIBRARY_DIR})

    MESSAGE("Boost information")
    MESSAGE("Boost_INCLUDE_DIRS: ${Boost_INCLUDE_DIRS}")
    MESSAGE("Boost_LIBRARY_DIRS: ${Boost_LIBRARY_DIRS}")
    MESSAGE("Boost Libraries: ${Boost_LIBRARIES}")
ENDIF ()

#CTP
SET(CTPINCLUE ${LIBS}/CTP/include)
SET(CTPLIB ${LIBS}/CTP/lib)
FIND_LIBRARY(CTP_MDUSER_LIBRARY NAMES thostmduserapi.so PATHS ${CTPLIB})
MESSAGE(${CTP_MDUSER_LIBRARY})

#talib
SET(TALIBINCLUDE ${LIBS}/talib/include)
SET(TALIBBIN ${LIBS}/talib/lib)
FIND_LIBRARY(TALIB_LIBRARY NAMES ta_lib PATHS ${TALIBBIN})
MESSAGE(${TALIB_LIBRARY})

ADD_SUBDIRECTORY(Data)
ADD_SUBDIRECTORY(Algorithm)
ADD_SUBDIRECTORY(Engine)
ADD_SUBDIRECTORY(CTPClient)
ADD_SUBDIRECTORY(Aria)

#gtests
ADD_SUBDIRECTORY(${LIBS}/gtest)

ENABLE_TESTING()

SET(PROJECT_TEST_NAME ${PROJECT_NAME_STR}_test)
INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS} ${COMMON})

FILE(GLOB TEST_SRC_FILES ${PROJECT_SOURCE_DIR}/tests/*.cpp)
ADD_EXECUTABLE(${PROJECT_TEST_NAME} ${TEST_SRC_FILES})
ADD_DEPENDENCIES(${PROJECT_TEST_NAME} googletest)


TARGET_LINK_LIBRARIES(${PROJECT_TEST_NAME}
            debug ${GTEST_LIBS_DIR}/DebugLibs/${CMAKE_FIND_LIBRARY_PREFIXES}gtest${CMAKE_FIND_LIBRARY_SUFFIXES}
            optimized ${GTEST_LIBS_DIR}/ReleaseLibs/${CMAKE_FIND_LIBRARY_PREFIXES}gtest${CMAKE_FIND_LIBRARY_SUFFIXES}
            )
TARGET_LINK_LIBRARIES(${PROJECT_TEST_NAME}
            debug ${GTEST_LIBS_DIR}/DebugLibs/${CMAKE_FIND_LIBRARY_PREFIXES}gtest_main${CMAKE_FIND_LIBRARY_SUFFIXES}
            optimized ${GTEST_LIBS_DIR}/ReleaseLibs/${CMAKE_FIND_LIBRARY_PREFIXES}gtest_main${CMAKE_FIND_LIBRARY_SUFFIXES}
            )

TARGET_LINK_LIBRARIES(${PROJECT_TEST_NAME} ${CMAKE_THREAD_LIBS_INIT})
ADD_TEST(test1 ${PROJECT_TEST_NAME})